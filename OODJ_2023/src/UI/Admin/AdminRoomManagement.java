/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI.Admin;

import Controller.HostelRoomController;
import Model.Enum.RoomType;
import static Model.Enum.RoomType.PREMIUMTWIN;
import Model.HostelRoom;
import Model.HostelSubClass.PremiumSingleRoom;
import Model.HostelSubClass.PremiumTwinRoom;
import Model.HostelSubClass.SingleRoom;
import Model.HostelSubClass.TwinRoom;
import UI.WelcomePage;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 */
public class AdminRoomManagement extends javax.swing.JFrame {

    private ArrayList<?> rooms = new ArrayList<>();
    private static RoomType type;
    
    private static AdminRoomManagement roomManagementUI;
    
    public static AdminRoomManagement activateUI(){
        if(AdminRoomManagement.roomManagementUI == null){
            AdminRoomManagement.roomManagementUI = new AdminRoomManagement();
        }
        return AdminRoomManagement.roomManagementUI;
    }

    /**
     * Creates new form Template
     */
    public AdminRoomManagement() {
        initComponents();
//        switchRoomType(RoomType.SINGLE);
        rooms = HostelRoomController.ActivateHostelRoomController().getHostelRooms();
        generateRoomCard();
        typeTitleLabel.setText("ALL");
        setLocationRelativeTo(null);
    }
    
    public void resetRooms(){
        if(null == type){
            rooms = HostelRoomController.ActivateHostelRoomController().getHostelRooms();
        } else switch (type) {
            case SINGLE:
                rooms = HostelRoomController.ActivateHostelRoomController().getSingleRooms();
                break;
            case TWIN:
                rooms = HostelRoomController.ActivateHostelRoomController().getTwinRooms();
                break;
            case PREMIUMSINGLE:
                rooms = HostelRoomController.ActivateHostelRoomController().getPremiumSingleRooms();
                break;
            case PREMIUMTWIN:
                rooms = HostelRoomController.ActivateHostelRoomController().getPremiumTwinRooms();
                break;
            default:
                break;
        }
        generateRoomCard();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jPanel1 = new javax.swing.JPanel();
        logoutBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        roomCardsPanel = new javax.swing.JScrollPane();
        singleRoomFilterBtn = new javax.swing.JButton();
        twinRoomFilterBtn = new javax.swing.JButton();
        pSingleFilterBtn = new javax.swing.JButton();
        pTwinFilterBtn = new javax.swing.JButton();
        addRoomBtn = new javax.swing.JButton();
        typeTitleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(204, 255, 255));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(855, 560));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        logoutBtn.setBackground(new java.awt.Color(153, 255, 255));
        logoutBtn.setForeground(new java.awt.Color(0, 0, 0));
        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 204, 204));
        backBtn.setForeground(new java.awt.Color(0, 0, 0));
        backBtn.setText("< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hostel room management");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        roomCardsPanel.setBackground(new java.awt.Color(255, 255, 255));
        roomCardsPanel.setForeground(new java.awt.Color(255, 255, 255));
        roomCardsPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        roomCardsPanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        singleRoomFilterBtn.setText("Single");
        singleRoomFilterBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        singleRoomFilterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleRoomFilterBtnActionPerformed(evt);
            }
        });

        twinRoomFilterBtn.setText("Twin");
        twinRoomFilterBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        twinRoomFilterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twinRoomFilterBtnActionPerformed(evt);
            }
        });

        pSingleFilterBtn.setText("Premium Single");
        pSingleFilterBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pSingleFilterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pSingleFilterBtnActionPerformed(evt);
            }
        });

        pTwinFilterBtn.setText("Premium Twin");
        pTwinFilterBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pTwinFilterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pTwinFilterBtnActionPerformed(evt);
            }
        });

        addRoomBtn.setBackground(new java.awt.Color(204, 0, 255));
        addRoomBtn.setForeground(new java.awt.Color(255, 255, 255));
        addRoomBtn.setText("+ ROOM");
        addRoomBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomBtnActionPerformed(evt);
            }
        });

        typeTitleLabel.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        typeTitleLabel.setForeground(new java.awt.Color(51, 51, 51));
        typeTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        typeTitleLabel.setText("[Type]");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(122, Short.MAX_VALUE)
                        .addComponent(typeTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomCardsPanel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(singleRoomFilterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(twinRoomFilterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pSingleFilterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pTwinFilterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addRoomBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(typeTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(singleRoomFilterBtn)
                    .addComponent(twinRoomFilterBtn)
                    .addComponent(pSingleFilterBtn)
                    .addComponent(pTwinFilterBtn)
                    .addComponent(addRoomBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomCardsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        WelcomePage wp = new WelcomePage();
        wp.setVisible(true);
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        AdminHomePage ahp = new AdminHomePage();
        ahp.setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomBtnActionPerformed
        // TODO add your handling code here:
        AdminRoomManagementForm armf = new AdminRoomManagementForm();
        armf.setVisible(true);
    }//GEN-LAST:event_addRoomBtnActionPerformed

    private void singleRoomFilterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleRoomFilterBtnActionPerformed
        // TODO add your handling code here:
        typeTitleLabel.setText("Single");
        switchRoomType(RoomType.SINGLE);
    }//GEN-LAST:event_singleRoomFilterBtnActionPerformed

    private void twinRoomFilterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twinRoomFilterBtnActionPerformed
        // TODO add your handling code here:
        typeTitleLabel.setText("Twin");
        switchRoomType(RoomType.TWIN);
    }//GEN-LAST:event_twinRoomFilterBtnActionPerformed

    private void pSingleFilterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pSingleFilterBtnActionPerformed
        // TODO add your handling code here:
        typeTitleLabel.setText("Premium Single");
        switchRoomType(RoomType.PREMIUMSINGLE);
    }//GEN-LAST:event_pSingleFilterBtnActionPerformed

    private void pTwinFilterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pTwinFilterBtnActionPerformed
        // TODO add your handling code here:
        typeTitleLabel.setText("Premium Twin");
        switchRoomType(RoomType.PREMIUMTWIN);
    }//GEN-LAST:event_pTwinFilterBtnActionPerformed

    private void switchRoomType(RoomType room_type) {
        AdminRoomManagement.type = room_type;
        switch (room_type) {
            case SINGLE -> rooms = (ArrayList<SingleRoom>) HostelRoomController.ActivateHostelRoomController().getSingleRooms();
            case TWIN -> rooms = (ArrayList<TwinRoom>) HostelRoomController.ActivateHostelRoomController().getTwinRooms();
            case PREMIUMSINGLE -> rooms = (ArrayList<PremiumSingleRoom>) HostelRoomController.ActivateHostelRoomController().getPremiumSingleRooms();
            case PREMIUMTWIN -> rooms = (ArrayList<PremiumTwinRoom>) HostelRoomController.ActivateHostelRoomController().getPremiumTwinRooms();
        }
        generateRoomCard();
    }
    
    private void generateRoomCard(){
        JPanel panel = new JPanel();
        int height = 130 * rooms.size();
        panel.setPreferredSize(new Dimension(843, height));

        rooms.forEach(room -> {
            RoomCard roomCard = new RoomCard((HostelRoom) room);
            panel.add(roomCard.roomCard());
        });
        roomCardsPanel.getViewport().add(panel);
    }

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRoomBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton pSingleFilterBtn;
    private javax.swing.JButton pTwinFilterBtn;
    private javax.swing.JScrollPane roomCardsPanel;
    private javax.swing.JButton singleRoomFilterBtn;
    private javax.swing.JButton twinRoomFilterBtn;
    private javax.swing.JLabel typeTitleLabel;
    // End of variables declaration//GEN-END:variables
}
